apiVersion: v1
kind: ConfigMap
metadata:
  name: adv-net-conf
  namespace: kube-system
data:
  configure-network.sh: |-
    #!/bin/sh

    # install necessary tools
    apk add --no-cache bash iproute2 >/dev/null || echo iproute2 install failed
    
    DOLLAR='$'

    cat <<EOF >>/tmp/net-config.sh
    #!/bin/bash

    ##
    # add and configure veth interfaces
    ##
    interfaces=('net0' 'ceph0')

    for interface in "${DOLLAR}{interfaces[@]}"; do
      ip link add name ${DOLLAR}interface type veth peer name ${DOLLAR}{interface}-port || echo failed to add veth interface ${DOLLAR}interface
      ip link set ${DOLLAR}{interface}-port up master br-ext || echo failed to add ${DOLLAR}{interface}-port interface to bridge
      ip link set ${DOLLAR}interface up || echo failed to bring up ${DOLLAR}interface interface
    done

    # configure vlans on interfaces
    bridge vlan add vid 2-4094 dev br-ext self || echo failed to assign vlans to br-ext
    bridge vlan add vid 2-4094 dev bond0 || echo failed to assign vlans to bond0

    bridge vlan add vid 3000 dev ceph0-port pvid untagged || echo failed to assign vlans to ceph0-port
    bridge vlan add vid 4094 dev net0-port pvid untagged || echo failed to assign vlans to net0-port

    echo Network configuration setup complete.
    EOF

    chmod +x /tmp/net-config.sh
    /tmp/net-config.sh
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: adv-net-config
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: adv-net-config
  template:
    metadata:
      labels:
        name: adv-net-config
    spec:
      hostNetwork: true
      containers:
        - name: adv-net-config-sleep
          image: docker.io/library/alpine:3.21.3
          securityContext:
            privileged: false
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          command: ["sleep", "infinity"]
      initContainers:
        - name: adv-net-config
          image: docker.io/library/alpine:3.21.3
          securityContext:
            capabilities:
              drop:
                - ALL
              add:
              - NET_ADMIN
          command: ["/bin/sh", "-c"]
          args:
            - >-
              /tmp/configure-network.sh ||
              sleep infinity
          volumeMounts:
          - name: net-config
            mountPath: /tmp/configure-network.sh
            subPath: configure-network.sh
            readOnly: true
      volumes:
      - name: net-config
        configMap:
          name: adv-net-conf
          defaultMode: 0544
          items:
          - key: configure-network.sh
            path: configure-network.sh